from utils.db_helper import DatabaseHelper
from data.preprocessor import DataPreprocessor
from config import Config

def test_database():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö"""
    
    print("=" * 60)
    print("üß™ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø –î–û –ë–ê–ó–ò –î–ê–ù–ò–•")
    print("=" * 60)
    
    db = DatabaseHelper()
    
    # –¢–µ—Å—Ç 1: –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    print("\nüìå –¢–µ—Å—Ç 1: –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ PostgreSQL")
    db.test_connection()
    
    # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–∞–π–æ–Ω–∞—Ö
    print("\nüìå –¢–µ—Å—Ç 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–∞–π–æ–Ω–∞—Ö")
    for district in Config.DISTRICTS:
        print(f"\nüèòÔ∏è –†–∞–π–æ–Ω: {district['name']} (ID: {district['id']})")
        stats = db.get_data_stats(district['id'])
        
        if stats:
            print(f"   üìä –í—Å—å–æ–≥–æ –∑–∞–ø–∏—Å—ñ–≤: {stats.get('total_records', 0)}")
            print(f"   üìÖ –ü–µ—Ä—à–∞ –¥–∞—Ç–∞: {stats.get('earliest_date', 'N/A')}")
            print(f"   üìÖ –û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞: {stats.get('latest_date', 'N/A')}")
            print(f"   üí® –°–µ—Ä–µ–¥–Ω—ñ–π PM2.5: {stats.get('avg_pm25', 0):.2f}")
            print(f"   üå°Ô∏è –°–µ—Ä–µ–¥–Ω—ñ–π AQI: {stats.get('avg_aqi', 0):.2f}")
        else:
            print("   ‚ö†Ô∏è –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö")
    
    # –¢–µ—Å—Ç 3: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–ª—è –ø–µ—Ä—à–æ–≥–æ —Ä–∞–π–æ–Ω—É
    print("\nüìå –¢–µ—Å—Ç 3: –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö")
    district_id = 1
    df = db.get_historical_data(district_id, days=7)
    
    if not df.empty:
        print(f"\n‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ {len(df)} –∑–∞–ø–∏—Å—ñ–≤ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 7 –¥–Ω—ñ–≤")
        print(f"   –ö–æ–ª–æ–Ω–∫–∏: {', '.join(df.columns[:5])}...")
        print(f"\nüìä –ü–µ—Ä—à—ñ 3 –∑–∞–ø–∏—Å–∏:")
        print(df[['measured_at', 'pm25', 'aqi', 'temperature']].head(3))
    else:
        print("‚ö†Ô∏è –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è")
        print("üí° –ü—ñ–¥–∫–∞–∑–∫–∞: –°–ø–æ—á–∞—Ç–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –¥–∞–Ω—ñ –≤ —Ç–∞–±–ª–∏—Ü—é air_quality_history")
        return
    
    # –¢–µ—Å—Ç 4: –ü—Ä–µ–ø—Ä–æ—Ü–µ—Å–∏–Ω–≥ –¥–∞–Ω–∏—Ö
    print("\nüìå –¢–µ—Å—Ç 4: –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö –¥–ª—è ML")
    preprocessor = DataPreprocessor(district_id)
    
    prepared_data = preprocessor.prepare_data(df)
    
    if prepared_data is not None and not prepared_data.empty:
        print(f"‚úÖ –î–∞–Ω—ñ –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ: {prepared_data.shape}")
        print(f"   –û–∑–Ω–∞–∫–∏: {', '.join(prepared_data.columns)}")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û")
    print("=" * 60)

if __name__ == "__main__":
    test_database()