# ml-service/scripts/auto_learning_scheduler.py
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π scheduler –¥–ª—è –æ–Ω–ª–∞–π–Ω-–Ω–∞–≤—á–∞–Ω–Ω—è
–ó–∞–ø—É—Å–∫–∞—î collect_feedback –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É
–ó–∞–ø—É—Å–∫–∞—î incremental_training —Ä–∞–∑ –Ω–∞ –¥–µ–Ω—å
"""
import schedule
import time
from datetime import datetime
import sys
import os

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from scripts.collect_feedback import collect_feedback_all
from scripts.incremental_training import incremental_train_all

def job_collect_feedback():
    """–ó–∞–ø—É—Å–∫ –∑–±–æ—Ä—É feedback"""
    print("\n" + "üîÑ" * 35)
    print(f"‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∑–±—ñ—Ä feedback - {datetime.now()}")
    print("üîÑ" * 35)
    
    try:
        collect_feedback_all()
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–æ—Ä—É feedback: {e}")

def job_incremental_training():
    """–ó–∞–ø—É—Å–∫ —ñ–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è"""
    print("\n" + "üß†" * 35)
    print(f"‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –¥–æ—Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è - {datetime.now()}")
    print("üß†" * 35)
    
    try:
        incremental_train_all(min_samples=50, epochs=5)
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–≤—á–∞–Ω–Ω—è: {e}")

def run_scheduler():
    """–ó–∞–ø—É—Å—Ç–∏—Ç–∏ scheduler"""
    
    print("=" * 70)
    print("ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ï –û–ù–õ–ê–ô–ù-–ù–ê–í–ß–ê–ù–ù–Ø")
    print("=" * 70)
    print(f"üïê –ó–∞–ø—É—â–µ–Ω–æ: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("\nüìÖ –†–æ–∑–∫–ª–∞–¥:")
    print("   ‚Ä¢ –ó–±—ñ—Ä feedback: –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É")
    print("   ‚Ä¢ –î–æ—Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –º–æ–¥–µ–ª—ñ: —â–æ–¥–Ω—è –æ 03:00")
    print("\nüí° –î–ª—è –∑—É–ø–∏–Ω–∫–∏: Ctrl+C")
    print("=" * 70)
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥
    schedule.every().hour.do(job_collect_feedback)  # –ö–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É
    schedule.every().day.at("03:00").do(job_incremental_training)  # –©–æ–¥–Ω—è –æ 3 –Ω–æ—á—ñ
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –æ–¥—Ä–∞–∑—É (–¥–ª—è —Ç–µ—Å—Ç—É)
    print("\nüöÄ –ü–µ—Ä—à–∏–π –∑–∞–ø—É—Å–∫ –∑–±–æ—Ä—É feedback...")
    job_collect_feedback()
    
    # –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª
    while True:
        schedule.run_pending()
        time.sleep(60)  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É

if __name__ == "__main__":
    try:
        run_scheduler()
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è Scheduler –∑—É–ø–∏–Ω–µ–Ω–æ!")
        print("üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")