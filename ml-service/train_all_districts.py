import requests
import json
from config import Config

def train_all_districts():
    """–¢—Ä–µ–Ω—É–≤–∞—Ç–∏ –º–æ–¥–µ–ª—ñ –¥–ª—è –≤—Å—ñ—Ö —Ä–∞–π–æ–Ω—ñ–≤"""
    
    print("=" * 60)
    print("üéØ –¢–†–ï–ù–£–í–ê–ù–ù–Ø –ú–û–î–ï–õ–ï–ô –î–õ–Ø –í–°–Ü–• –†–ê–ô–û–ù–Ü–í –õ–¨–í–û–í–ê")
    print("=" * 60)
    
    base_url = f"http://localhost:{Config.FLASK_PORT}"
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
    training_params = {
        "days": 7,      # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –¥–∞–Ω—ñ (7 –¥–Ω—ñ–≤)
        "epochs": 30    # 30 –µ–ø–æ—Ö –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
    }
    
    results = []
    errors = []
    
    for district in Config.DISTRICTS:
        district_id = district['id']
        district_name = district['name']
        
        print(f"\n{'='*60}")
        print(f"üèòÔ∏è –†–∞–π–æ–Ω {district_id}: {district_name}")
        print(f"{'='*60}")
        
        try:
            # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ POST –∑–∞–ø–∏—Ç –¥–ª—è —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
            response = requests.post(
                f"{base_url}/api/train/{district_id}",
                json=training_params,
                timeout=300  # 5 —Ö–≤–∏–ª–∏–Ω timeout
            )
            
            if response.status_code == 200:
                data = response.json()
                
                if data.get('success'):
                    print(f"‚úÖ –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ!")
                    print(f"   üìä –ó–∞–ø–∏—Å—ñ–≤: {data.get('training_records')}")
                    print(f"   üîÑ –ï–ø–æ—Ö: {data.get('epochs_trained')}")
                    print(f"   üìâ Loss: {data.get('metrics', {}).get('loss', 'N/A'):.4f}")
                    print(f"   üìà MAE: {data.get('metrics', {}).get('mae', 'N/A'):.4f}")
                    
                    results.append({
                        'district_id': district_id,
                        'district_name': district_name,
                        'status': 'success',
                        'metrics': data.get('metrics')
                    })
                else:
                    error_msg = data.get('error', 'Unknown error')
                    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {error_msg}")
                    errors.append({
                        'district_id': district_id,
                        'district_name': district_name,
                        'error': error_msg
                    })
            else:
                error_data = response.json()
                error_msg = error_data.get('error', f'HTTP {response.status_code}')
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {error_msg}")
                errors.append({
                    'district_id': district_id,
                    'district_name': district_name,
                    'error': error_msg
                })
                
        except requests.exceptions.Timeout:
            print(f"‚è±Ô∏è Timeout - —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–µ")
            errors.append({
                'district_id': district_id,
                'district_name': district_name,
                'error': 'Timeout'
            })
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}")
            errors.append({
                'district_id': district_id,
                'district_name': district_name,
                'error': str(e)
            })
    
    # –ü—ñ–¥—Å—É–º–æ–∫
    print("\n" + "=" * 60)
    print("üìä –ü–Ü–î–°–£–ú–û–ö –¢–†–ï–ù–£–í–ê–ù–ù–Ø")
    print("=" * 60)
    print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ: {len(results)} / {len(Config.DISTRICTS)}")
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∏: {len(errors)} / {len(Config.DISTRICTS)}")
    
    if results:
        print("\nüéâ –£—Å–ø—ñ—à–Ω–æ –Ω–∞—Ç—Ä–µ–Ω–æ–≤–∞–Ω—ñ —Ä–∞–π–æ–Ω–∏:")
        for r in results:
            print(f"   ‚Ä¢ {r['district_name']} (ID: {r['district_id']})")
            if r.get('metrics'):
                print(f"     Loss: {r['metrics'].get('loss', 'N/A'):.4f}, MAE: {r['metrics'].get('mae', 'N/A'):.4f}")
    
    if errors:
        print("\n‚ö†Ô∏è –†–∞–π–æ–Ω–∏ –∑ –ø–æ–º–∏–ª–∫–∞–º–∏:")
        for e in errors:
            print(f"   ‚Ä¢ {e['district_name']} (ID: {e['district_id']}): {e['error']}")
    
    print("\n" + "=" * 60)

if __name__ == "__main__":
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∑–∞–ø—É—â–µ–Ω–∏–π ML —Å–µ—Ä–≤—ñ—Å
    try:
        response = requests.get(f"http://localhost:{Config.FLASK_PORT}/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ ML Service –∑–∞–ø—É—â–µ–Ω–∏–π\n")
            train_all_districts()
        else:
            print("‚ùå ML Service –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î")
    except:
        print("‚ùå ML Service –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π!")
        print("üí° –ó–∞–ø—É—Å—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É: python app.py")