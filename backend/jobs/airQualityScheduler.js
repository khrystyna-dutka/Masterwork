// backend/jobs/airQualityScheduler.js
const cron = require('node-cron');
const airQualityHistoryService = require('../services/airQualityHistoryService');

class AirQualityScheduler {
  start() {
    // –ó–±–∏—Ä–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É (0 —Ö–≤–∏–ª–∏–Ω –∫–æ–∂–Ω–æ—ó –≥–æ–¥–∏–Ω–∏)
    cron.schedule('0 * * * *', async () => {
      console.log('‚è∞ –ó–∞–ø—É—Å–∫ –∑–±–æ—Ä—É –¥–∞–Ω–∏—Ö (–∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É)...');
      try {
        await airQualityHistoryService.saveCurrentDataToHistory();
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –≤ scheduler:', error);
      }
    });

    // –û—á–∏—â–∞—Ç–∏ —Å—Ç–∞—Ä—ñ –¥–∞–Ω—ñ –∫–æ–∂–µ–Ω –¥–µ–Ω—å –æ 3:00
    cron.schedule('0 3 * * *', async () => {
      console.log('üóëÔ∏è –ó–∞–ø—É—Å–∫ –æ—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –¥–∞–Ω–∏—Ö...');
      try {
        await airQualityHistoryService.cleanOldData();
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è:', error);
      }
    });

    console.log('‚úÖ Scheduler –∑–∞–ø—É—â–µ–Ω–æ:');
    console.log('   - –ó–±—ñ—Ä –¥–∞–Ω–∏—Ö: –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É');
    console.log('   - –û—á–∏—â–µ–Ω–Ω—è: —â–æ–¥–Ω—è –æ 3:00');
  }
}

module.exports = new AirQualityScheduler();