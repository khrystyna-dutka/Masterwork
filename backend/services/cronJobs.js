// services/cronJobs.js
const cron = require('node-cron');
const { sendDailyEmailsToSubscribers } = require('./emailService');

// –ó–∞–ø—É—Å–∫ —â–æ–¥–µ–Ω–Ω–∏—Ö email —Å–ø–æ–≤—ñ—â–µ–Ω—å
const startDailyEmailCron = () => {
  // –ß–∞—Å –∑ .env –∞–±–æ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 08:00
  const cronTime = process.env.DAILY_EMAIL_TIME || '08:00';
  const [hour, minute] = cronTime.split(':');

  // –ó–∞–ø—É—Å–∫–∞—î–º–æ —â–æ–¥–Ω—è –æ –≤–∫–∞–∑–∞–Ω–∏–π —á–∞—Å
  // –§–æ—Ä–º–∞—Ç: —Ö–≤–∏–ª–∏–Ω–∞ –≥–æ–¥–∏–Ω–∞ * * *
  const cronExpression = `${minute} ${hour} * * *`;

  console.log(`‚è∞ –ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ —â–æ–¥–µ–Ω–Ω—É —Ä–æ–∑—Å–∏–ª–∫—É –Ω–∞ ${cronTime}`);

  const job = cron.schedule(cronExpression, async () => {
    console.log(`üìß –ó–∞–ø—É—Å–∫ —â–æ–¥–µ–Ω–Ω–æ—ó —Ä–æ–∑—Å–∏–ª–∫–∏ –æ ${new Date().toLocaleString('uk-UA')}`);
    try {
      const result = await sendDailyEmailsToSubscribers();
      console.log(`‚úÖ –†–æ–∑—Å–∏–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ ${result.sent}, –ø–æ–º–∏–ª–æ–∫ ${result.failed}`);
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —â–æ–¥–µ–Ω–Ω—ñ–π —Ä–æ–∑—Å–∏–ª—Ü—ñ:', error);
    }
  }, {
    scheduled: true,
    timezone: "Europe/Kiev"
  });

  job.start();
  console.log('‚úÖ Cron job –¥–ª—è —â–æ–¥–µ–Ω–Ω–∏—Ö email –∑–∞–ø—É—â–µ–Ω–æ');

  return job;
};

// –¢–µ—Å—Ç–æ–≤–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ (–º–æ–∂–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –≤—Ä—É—á–Ω—É)
const triggerTestEmail = async () => {
  console.log('üß™ –¢–µ—Å—Ç–æ–≤–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ email...');
  try {
    const result = await sendDailyEmailsToSubscribers();
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', result);
    return result;
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ—ó –≤—ñ–¥–ø—Ä–∞–≤–∫–∏:', error);
    throw error;
  }
};

module.exports = {
  startDailyEmailCron,
  triggerTestEmail
};