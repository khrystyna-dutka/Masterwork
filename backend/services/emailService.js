// services/emailService.js
const nodemailer = require('nodemailer');
const { query } = require('../config/database');

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä–∞
const createTransporter = () => {
  return nodemailer.createTransport({
    host: process.env.EMAIL_HOST,
    port: process.env.EMAIL_PORT,
    secure: false,
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASSWORD
    },
    // –î–æ–¥–∞—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è UTF-8
    pool: true,
    maxConnections: 1,
    rateDelta: 1000,
    rateLimit: 5
  });
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É AQI
const getAQIStatus = (aqi) => {
  if (aqi <= 50) return { label: '–î–æ–±—Ä–∞', color: '#10b981', emoji: '‚úÖ' };
  if (aqi <= 100) return { label: '–ü–æ–º—ñ—Ä–Ω–∞', color: '#f59e0b', emoji: '‚ö†Ô∏è' };
  if (aqi <= 150) return { label: '–ù–µ–∑–¥–æ—Ä–æ–≤–∞ –¥–ª—è —á—É—Ç–ª–∏–≤–∏—Ö', color: '#f97316', emoji: 'üü†' };
  if (aqi <= 200) return { label: '–ù–µ–∑–¥–æ—Ä–æ–≤–∞', color: '#ef4444', emoji: 'üî¥' };
  if (aqi <= 300) return { label: '–î—É–∂–µ –Ω–µ–∑–¥–æ—Ä–æ–≤–∞', color: '#9333ea', emoji: 'üü£' };
  return { label: '–ù–µ–±–µ–∑–ø–µ—á–Ω–∞', color: '#7f1d1d', emoji: '‚ö´' };
};

// HTML —à–∞–±–ª–æ–Ω –¥–ª—è email
const generateEmailHTML = (userName, districts) => {
  const districtRows = districts.map(district => {
    const status = getAQIStatus(district.aqi);
    return `
      <tr>
        <td style="padding: 15px; border-bottom: 1px solid #e5e7eb;">
          <strong style="font-size: 16px; color: #1f2937;">${district.name}</strong>
        </td>
        <td style="padding: 15px; text-align: center; border-bottom: 1px solid #e5e7eb;">
          <span style="font-size: 24px;">${status.emoji}</span>
          <div style="font-size: 28px; font-weight: bold; color: ${status.color}; margin: 5px 0;">
            ${district.aqi}
          </div>
          <div style="font-size: 14px; color: #6b7280;">${status.label}</div>
        </td>
        <td style="padding: 15px; border-bottom: 1px solid #e5e7eb;">
          <div style="font-size: 13px; color: #6b7280; line-height: 1.6;">
            <div>PM2.5: <strong>${district.pm25 || 'N/A'} ¬µg/m¬≥</strong></div>
            <div>PM10: <strong>${district.pm10 || 'N/A'} ¬µg/m¬≥</strong></div>
            <div>NO‚ÇÇ: <strong>${district.no2 || 'N/A'} ¬µg/m¬≥</strong></div>
            <div>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <strong>${district.temperature || 'N/A'}¬∞C</strong></div>
          </div>
        </td>
      </tr>
    `;
  }).join('');

  return `
    <!DOCTYPE html>
    <html lang="uk">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <title>–©–æ–¥–µ–Ω–Ω–∏–π –∑–≤—ñ—Ç –ø—Ä–æ —è–∫—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è</title>
    </head>
    <body style="margin: 0; padding: 0; background-color: #f3f4f6; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;">
      <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
        <!-- Header -->
        <div style="background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%); padding: 30px; border-radius: 12px 12px 0 0; text-align: center;">
          <h1 style="margin: 0; color: white; font-size: 28px;">üå± EcoLviv</h1>
          <p style="margin: 10px 0 0; color: #dbeafe; font-size: 16px;">–©–æ–¥–µ–Ω–Ω–∏–π –∑–≤—ñ—Ç –ø—Ä–æ —è–∫—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è</p>
        </div>

        <!-- Content -->
        <div style="background: white; padding: 30px; border-radius: 0 0 12px 12px; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);">
          <p style="font-size: 16px; color: #374151; margin: 0 0 20px;">
            –î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É, <strong>${userName}</strong>! üëã
          </p>
          <p style="font-size: 14px; color: #6b7280; margin: 0 0 25px; line-height: 1.6;">
            –û—Å—å –∞–∫—Ç—É–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç–∞–Ω –ø–æ–≤—ñ—Ç—Ä—è —É –≤–∞—à–∏—Ö –æ–±—Ä–∞–Ω–∏—Ö —Ä–∞–π–æ–Ω–∞—Ö –õ—å–≤–æ–≤–∞ —Å—Ç–∞–Ω–æ–º –Ω–∞ <strong>${new Date().toLocaleDateString('uk-UA', { day: 'numeric', month: 'long', year: 'numeric' })}</strong>:
          </p>

          <!-- Districts Table -->
          <table style="width: 100%; border-collapse: collapse; margin: 20px 0;">
            <thead>
              <tr style="background-color: #f9fafb;">
                <th style="padding: 12px; text-align: left; font-size: 14px; color: #6b7280; border-bottom: 2px solid #e5e7eb;">–†–∞–π–æ–Ω</th>
                <th style="padding: 12px; text-align: center; font-size: 14px; color: #6b7280; border-bottom: 2px solid #e5e7eb;">–°—Ç–∞–Ω –ø–æ–≤—ñ—Ç—Ä—è</th>
                <th style="padding: 12px; text-align: left; font-size: 14px; color: #6b7280; border-bottom: 2px solid #e5e7eb;">–ü–æ–∫–∞–∑–Ω–∏–∫–∏</th>
              </tr>
            </thead>
            <tbody>
              ${districtRows}
            </tbody>
          </table>

          <!-- Recommendations -->
          <div style="background-color: #eff6ff; border-left: 4px solid #3b82f6; padding: 15px; margin: 25px 0; border-radius: 4px;">
            <h3 style="margin: 0 0 10px; font-size: 16px; color: #1e40af;">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:</h3>
            <ul style="margin: 0; padding-left: 20px; color: #1e3a8a; font-size: 14px; line-height: 1.8;">
              <li>–ü—Ä–∏ –≤–∏—Å–æ–∫–æ–º—É —Ä—ñ–≤–Ω—ñ –∑–∞–±—Ä—É–¥–Ω–µ–Ω–Ω—è –æ–±–º–µ–∂—Ç–µ —á–∞—Å –ø–µ—Ä–µ–±—É–≤–∞–Ω–Ω—è –Ω–∞ –≤—É–ª–∏—Ü—ñ</li>
              <li>–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∑–∞—Ö–∏—Å–Ω—ñ –º–∞—Å–∫–∏ –ø—Ä–∏ AQI –≤–∏—â–µ 150</li>
              <li>–ü—Ä–æ–≤—ñ—Ç—Ä—é–π—Ç–µ –ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è —É —Ä–∞–Ω–∫–æ–≤—ñ –≥–æ–¥–∏–Ω–∏</li>
              <li>–°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏ —É –¥–æ–¥–∞—Ç–∫—É EcoLviv</li>
            </ul>
          </div>

          <!-- Call to Action -->
          <div style="text-align: center; margin: 30px 0 20px;">
            <a href="${process.env.FRONTEND_URL || 'http://localhost:3000'}" 
               style="display: inline-block; background-color: #3b82f6; color: white; text-decoration: none; padding: 12px 30px; border-radius: 8px; font-weight: 600; font-size: 14px;">
              –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
            </a>
          </div>

          <!-- Footer -->
          <div style="border-top: 1px solid #e5e7eb; padding-top: 20px; margin-top: 30px;">
            <p style="font-size: 12px; color: #9ca3af; margin: 0; line-height: 1.6;">
              –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ —Ü–µ–π –ª–∏—Å—Ç, —Ç–æ–º—É —â–æ –ø—ñ–¥–ø–∏—Å–∞–Ω—ñ –Ω–∞ —â–æ–¥–µ–Ω–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è EcoLviv.<br>
              –ó–º—ñ–Ω–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–∂–Ω–∞ —É —Å–≤–æ—î–º—É –ø—Ä–æ—Ñ—ñ–ª—ñ –Ω–∞ —Å–∞–π—Ç—ñ.
            </p>
            <p style="font-size: 12px; color: #d1d5db; margin: 10px 0 0; text-align: center;">
              ¬© ${new Date().getFullYear()} EcoLviv. –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ.
            </p>
          </div>
        </div>
      </div>
    </body>
    </html>
  `;
};

// –í—ñ–¥–ø—Ä–∞–≤–∫–∞ email –æ–¥–Ω–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
const sendDailyEmail = async (userEmail, userName, districts) => {
  try {
    const transporter = createTransporter();
    
    const mailOptions = {
      from: {
        name: process.env.EMAIL_FROM_NAME || 'EcoLviv',
        address: process.env.EMAIL_FROM || process.env.EMAIL_USER
      },
      to: userEmail,
      subject: `üå± –©–æ–¥–µ–Ω–Ω–∏–π –∑–≤—ñ—Ç –ø—Ä–æ —è–∫—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è - ${new Date().toLocaleDateString('uk-UA', { day: 'numeric', month: 'long', year: 'numeric' })}`,
      html: generateEmailHTML(userName, districts),
      // –í–ê–ñ–õ–ò–í–û: –î–æ–¥–∞—î–º–æ UTF-8 encoding
      encoding: 'utf-8',
      textEncoding: 'base64',
      headers: {
        'Content-Type': 'text/html; charset=UTF-8'
      }
    };

    const info = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è ${userEmail}: ${info.messageId}`);
    return { success: true, messageId: info.messageId };
  } catch (error) {
    console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email –¥–ª—è ${userEmail}:`, error);
    return { success: false, error: error.message };
  }
};

// –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —â–æ–¥–µ–Ω–Ω–∏—Ö email –≤—Å—ñ–º –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º
const sendDailyEmailsToSubscribers = async () => {
  try {
    console.log('üîÑ –ü–æ—á–∞—Ç–æ–∫ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —â–æ–¥–µ–Ω–Ω–∏—Ö email —Å–ø–æ–≤—ñ—â–µ–Ω—å...');

    // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —É–≤—ñ–º–∫–Ω–µ–Ω–∏–º–∏ email —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è–º–∏ —Ç–∞ —ó—Ö –ø—ñ–¥–ø–∏—Å–∫–∏
    const result = await query(`
      SELECT DISTINCT
        u.id as user_id,
        u.email,
        u.full_name,
        u.notification_preferences
      FROM users u
      INNER JOIN user_subscriptions us ON u.id = us.user_id
      WHERE 
        us.notify_daily_summary = true
        AND u.notification_preferences->>'email' = 'true'
    `);

    if (result.rows.length === 0) {
      console.log('‚ÑπÔ∏è –ù–µ–º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email');
      return { sent: 0, failed: 0 };
    }

    console.log(`üìß –ó–Ω–∞–π–¥–µ–Ω–æ ${result.rows.length} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏`);

    let sentCount = 0;
    let failedCount = 0;

    // –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    for (const user of result.rows) {
      try {
        // –û—Ç—Ä–∏–º—É—î–º–æ –ø—ñ–¥–ø–∏—Å–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –¥–∞–Ω–∏–º–∏ —Ä–∞–π–æ–Ω—ñ–≤
        const subscriptionsResult = await query(`
          SELECT 
            d.id,
            d.name,
            us.alert_threshold
          FROM user_subscriptions us
          INNER JOIN districts d ON us.district_id = d.id
          WHERE us.user_id = $1 AND us.notify_daily_summary = true
          ORDER BY d.name
        `, [user.user_id]);

        if (subscriptionsResult.rows.length === 0) {
          console.log(`‚ö†Ô∏è –£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${user.email} –Ω–µ–º–∞—î –ø—ñ–¥–ø–∏—Å–æ–∫`);
          continue;
        }

        // –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ —è–∫—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–∞–π–æ–Ω—É
        const districtsWithData = [];
        
        for (const subscription of subscriptionsResult.rows) {
          const airQualityResult = await query(`
            SELECT 
              aqi,
              pm25,
              pm10,
              no2,
              so2,
              co,
              o3,
              temperature,
              humidity,
              measured_at
            FROM air_quality_history
            WHERE district_id = $1
              AND is_forecast = false
            ORDER BY measured_at DESC
            LIMIT 1
          `, [subscription.id]);

          if (airQualityResult.rows.length > 0) {
            const airData = airQualityResult.rows[0];
            districtsWithData.push({
              name: subscription.name,
              aqi: airData.aqi,
              pm25: airData.pm25,
              pm10: airData.pm10,
              no2: airData.no2,
              so2: airData.so2,
              co: airData.co,
              o3: airData.o3,
              temperature: airData.temperature,
              humidity: airData.humidity
            });
          } else {
            // –Ø–∫—â–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö, –¥–æ–¥–∞—î–º–æ —Ä–∞–π–æ–Ω –∑ –º–æ–∫-–¥–∞–Ω–∏–º–∏
            districtsWithData.push({
              name: subscription.name,
              aqi: 50,
              pm25: 12,
              pm10: 20,
              no2: 15,
              temperature: 18
            });
          }
        }

        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ email
        const emailResult = await sendDailyEmail(
          user.email,
          user.full_name,
          districtsWithData
        );

        if (emailResult.success) {
          sentCount++;
        } else {
          failedCount++;
        }

      } catch (userError) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${user.email}:`, userError);
        failedCount++;
      }
    }

    console.log(`‚úÖ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${sentCount} —É—Å–ø—ñ—à–Ω–æ, ${failedCount} –ø–æ–º–∏–ª–æ–∫`);
    return { sent: sentCount, failed: failedCount };

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —â–æ–¥–µ–Ω–Ω–∏—Ö email:', error);
    throw error;
  }
};

module.exports = {
  sendDailyEmail,
  sendDailyEmailsToSubscribers
};