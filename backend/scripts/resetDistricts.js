// backend/scripts/resetDistricts.js
require('dotenv').config();
const { query, pool } = require('../config/database');

async function resetDistricts() {
  try {
    console.log('üîÑ –ü–æ–≤–Ω–∏–π —Å–∫–∏–¥ —Ä–∞–π–æ–Ω—ñ–≤...');

    await query('SET CLIENT_ENCODING TO UTF8');
    await query('DELETE FROM user_subscriptions');
    console.log('‚úÖ –ü—ñ–¥–ø–∏—Å–∫–∏ –≤–∏–¥–∞–ª–µ–Ω–æ');

    await query('DELETE FROM air_quality_history');
    console.log('‚úÖ –Ü—Å—Ç–æ—Ä—ñ—è –≤–∏–¥–∞–ª–µ–Ω–∞');

    await query('DELETE FROM districts');
    console.log('‚úÖ –°—Ç–∞—Ä—ñ —Ä–∞–π–æ–Ω–∏ –≤–∏–¥–∞–ª–µ–Ω–æ');

    await query('ALTER SEQUENCE districts_id_seq RESTART WITH 1');
    console.log('‚úÖ ID –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å —Å–∫–∏–Ω—É—Ç–∞');

    const districts = [
      {
        name: '–ì–∞–ª–∏—Ü—å–∫–∏–π',
        name_en: 'Halytskyi',
        latitude: 49.8403,    // ‚Üê –í–ò–ü–†–ê–í–õ–ï–ù–û
        longitude: 24.0323,   // ‚Üê –í–ò–ü–†–ê–í–õ–ï–ù–û
        population: 115000,
        tree_coverage: 40,
        traffic_level: 82,
        description: '–Ü—Å—Ç–æ—Ä–∏—á–Ω–∏–π —Ü–µ–Ω—Ç—Ä –º—ñ—Å—Ç–∞ –∑ –≤–∏—Å–æ–∫–æ—é —Ç—É—Ä–∏—Å—Ç–∏—á–Ω–æ—é –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é'
      },
      {
        name: '–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π',
        name_en: 'Frankivskyi',
        latitude: 49.8176,
        longitude: 23.9888,
        population: 142000,
        tree_coverage: 35,
        traffic_level: 88,
        description: '–ü—Ä–æ–º–∏—Å–ª–æ–≤–∏–π —Ä–∞–π–æ–Ω –∑ –≤–∏—Å–æ–∫–∏–º —Ä—ñ–≤–Ω–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è'
      },
      {
        name: '–ó–∞–ª—ñ–∑–Ω–∏—á–Ω–∏–π',
        name_en: 'Zaliznychnyi',
        latitude: 49.8356,
        longitude: 23.9305,
        population: 108000,
        tree_coverage: 25,
        traffic_level: 95,
        description: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∏–π –≤—É–∑–æ–ª –º—ñ—Å—Ç–∞ –∑ –∑–∞–ª—ñ–∑–Ω–∏—á–Ω–∏–º –≤–æ–∫–∑–∞–ª–æ–º'
      },
      {
        name: '–®–µ–≤—á–µ–Ω–∫—ñ–≤—Å—å–∫–∏–π',
        name_en: 'Shevchenkivskyi',
        latitude: 49.8662,
        longitude: 24.0348,
        population: 98000,
        tree_coverage: 20,
        traffic_level: 98,
        description: '–†–∞–π–æ–Ω –∑ —ñ–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∏–º –¥–æ—Ä–æ–∂–Ω—ñ–º —Ä—É—Ö–æ–º'
      },
      {
        name: '–õ–∏—á–∞–∫—ñ–≤—Å—å–∫–∏–π',
        name_en: 'Lychakivskyi',
        latitude: 49.8193,
        longitude: 24.0684,
        population: 135000,
        tree_coverage: 45,
        traffic_level: 85,
        description: '–ó–µ–ª–µ–Ω–∏–π —Ä–∞–π–æ–Ω –∑ –ø–∞—Ä–∫–∞–º–∏ —Ç–∞ –ª—ñ—Å–æ–ø–∞—Ä–∫–∞–º–∏'
      },
      {
        name: '–°–∏—Ö—ñ–≤—Å—å–∫–∏–π',
        name_en: 'Sykhivskyi',
        latitude: 49.8107,
        longitude: 24.0457,
        population: 125000,
        tree_coverage: 55,
        traffic_level: 70,
        description: '–ù–∞–π–±—ñ–ª—å—à –µ–∫–æ–ª–æ–≥—ñ—á–Ω–æ —á–∏—Å—Ç–∏–π —Å–ø–∞–ª—å–Ω–∏–π —Ä–∞–π–æ–Ω'
      }
    ];

    for (const district of districts) {
      const result = await query(
        `INSERT INTO districts 
         (name, name_en, latitude, longitude, population, tree_coverage_percent, traffic_level, description) 
         VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
         RETURNING id, name`,
        [
          district.name,
          district.name_en,
          district.latitude,   // ‚Üê –í–ò–ü–†–ê–í–õ–ï–ù–û
          district.longitude,  // ‚Üê –í–ò–ü–†–ê–í–õ–ï–ù–û
          district.population,
          district.tree_coverage,
          district.traffic_level,
          district.description
        ]
      );

      console.log(`‚úÖ –î–æ–¥–∞–Ω–æ —Ä–∞–π–æ–Ω: ${result.rows[0].name} (ID: ${result.rows[0].id})`);
    }

    const checkResult = await query('SELECT id, name, name_en, latitude, longitude FROM districts ORDER BY id');
    console.log('\nüìã –í—Å—ñ —Ä–∞–π–æ–Ω–∏ –≤ –ë–î:');
    checkResult.rows.forEach(row => {
      console.log(`   ${row.id}. ${row.name} [${row.latitude}, ${row.longitude}]`);
    });

    console.log('\n‚úÖ –†–∞–π–æ–Ω–∏ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏!');
    
    process.exit(0);

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
    process.exit(1);
  } finally {
    await pool.end();
  }
}

resetDistricts();